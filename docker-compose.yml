services:
  app:
    build:
      context: ./docker/app
      dockerfile: Dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    image: ai-abemutsuki/php-fpm:dev
    container_name: ai-app
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html
    env_file:
      - .env.docker
    depends_on:
      - db
      - redis
    restart: unless-stopped

  web:
    image: httpd:2.4-alpine
    container_name: ai-web-apache
    ports:
      - "8080:80"               # アプリ閲覧: http://localhost:8080/
    volumes:
      - ./src:/var/www/html
      - ./docker/web/httpd.conf:/usr/local/apache2/conf/httpd.conf:ro
    depends_on:
      - app
    restart: unless-stopped

  db:
    image: mysql:8.4
    container_name: ai-db
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: root
      TZ: Asia/Tokyo
    ports:
      - "3307:3306"             # ホストからは 3307、コンテナ内部は 3306
    volumes:
      - dbdata:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -proot || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: ai-phpmyadmin
    environment:
      PMA_HOST: db               # コンテナ間接続はサービス名
      PMA_USER: root
      PMA_PASSWORD: root
      UPLOAD_LIMIT: 512M
      TZ: Asia/Tokyo
    ports:
      - "8081:80"                # phpMyAdmin: http://localhost:8081/
    depends_on:
      - db
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: ai-redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: ai-mailhog
    ports:
      - "8025:8025"              # Web UI
      - "1025:1025"              # SMTP
    restart: unless-stopped

  queue:
    build:
      context: ./docker/queue
      dockerfile: Dockerfile
    image: ai-abemutsuki/queue:dev
    container_name: ai-queue
    working_dir: /var/www/html
    depends_on:
      - app
      - redis
    volumes:
      - ./src:/var/www/html
    env_file:
      - .env.docker
    command: sh -lc "php artisan queue:restart && php artisan queue:work --tries=3 --backoff=5 --timeout=120"
    restart: unless-stopped

  node:
    image: node:20-alpine
    container_name: ai-node
    working_dir: /usr/src/app
    volumes:
      - ./src:/usr/src/app
    entrypoint: ["sh","-c","npm install && npm run dev -- --host"]
    restart: unless-stopped

volumes:
  dbdata:
